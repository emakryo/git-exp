#!/bin/bash

subcommand=$1

EXE="$(git rev-parse --show-cdup)run.sh"

print_help() {
	echo "\
usage: git ticox run <new branch>
       git ticox show"
}

pre_run() {
	cur_branch=$(git rev-parse --abbrev-ref HEAD)
	root_dir=$(git rev-parse --show-cdup)
	new_branch=$1
	git checkout -B $new_branch || exit 255
	result_dir=./${root_dir}result/$new_branch
	rm -rf $result_dir
	mkdir -p $result_dir
	git add ./$root_dir || exit 255
	#git commit #-m "Automatic commit: start experiment: $EXE" || exit 255
	git commit --allow-empty || exit 255
	commit_message="$(git log --format=%B -n 1)"
	git commit --allow-empty --amend -m "Start experiment" -m "$commit_message" || exit 255
	run > $result_dir/stdout 2> $result_dir/stderr &
}

run() {
	./$EXE $result_dir
	git checkout -q $new_branch || exit 255
	git add $result_dir || exit 255
	git commit -q -m "Finish experiment" -m "$commit_message" || exit 255
}

show() {
	git log --graph --all --oneline --decorate=full
}


case "$subcommand" in
	"run" )
		echo "Run $EXE"
		if [ $# -eq 2 ]; then
			shift
			pre_run $@
		else
			print_help
		fi;;
	"show" )
		show;;
	* )
		print_help
		exit 255;;
esac

